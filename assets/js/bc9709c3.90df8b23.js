"use strict";(self.webpackChunkdeveloperpedia=self.webpackChunkdeveloperpedia||[]).push([[2049],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(t),g=i,m=u["".concat(c,".").concat(g)]||u[g]||p[g]||a;return t?r.createElement(m,l(l({ref:n},d),{},{components:t})):r.createElement(m,l({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=g;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},51953:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const a={sidebar_position:7},l="7. \u8fdb\u9636\uff1a\u6253\u5b57\u673a\u6a21\u5f0f",o={unversionedId:"explore/tutorials/stream/bot/go/send-streaming-card",id:"explore/tutorials/stream/bot/go/send-streaming-card",title:"7. \u8fdb\u9636\uff1a\u6253\u5b57\u673a\u6a21\u5f0f",description:"\u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u5c06\u4f1a\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u53d1\u9001\u548c\u66f4\u65b0\u4e92\u52a8\u5361\u7247\uff08\u666e\u901a\u7248\uff09\u6765\u5b9e\u73b0\u6253\u5b57\u673a\u6a21\u5f0f\u3002",source:"@site/docs/explore/tutorials/stream/bot/go/send-streaming-card.md",sourceDirName:"explore/tutorials/stream/bot/go",slug:"/explore/tutorials/stream/bot/go/send-streaming-card",permalink:"/developerpedia/docs/explore/tutorials/stream/bot/go/send-streaming-card",draft:!1,editUrl:"https://github.com/open-dingtalk/developerpedia/tree/main/docs/explore/tutorials/stream/bot/go/send-streaming-card.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"6. \u8fdb\u9636\uff1a\u53d1\u9001 Markdown",permalink:"/developerpedia/docs/explore/tutorials/stream/bot/go/send-markdown"},next:{title:"8. \u8fdb\u9636\uff1a\u5361\u7247\u56de\u8c03",permalink:"/developerpedia/docs/explore/tutorials/stream/bot/go/card-callback"}},c={},s=[{value:"\u521b\u5efa Go \u6a21\u5757",id:"\u521b\u5efa-go-\u6a21\u5757",level:2},{value:"\u5b89\u88c5\u4f9d\u8d56",id:"\u5b89\u88c5\u4f9d\u8d56",level:2},{value:"\u5f00\u53d1\u673a\u5668\u4eba\u670d\u52a1",id:"\u5f00\u53d1\u673a\u5668\u4eba\u670d\u52a1",level:2},{value:"\u8fd0\u884c\u673a\u5668\u4eba\u670d\u52a1",id:"\u8fd0\u884c\u673a\u5668\u4eba\u670d\u52a1",level:2},{value:"\u6548\u679c\u5982\u4e0b",id:"\u6548\u679c\u5982\u4e0b",level:2},{value:"\u6700\u4f73\u5b9e\u8df5",id:"\u6700\u4f73\u5b9e\u8df5",level:2},{value:"\u76f8\u5173\u94fe\u63a5",id:"\u76f8\u5173\u94fe\u63a5",level:2}],d={toc:s},u="wrapper";function p(e){let{components:n,...a}=e;return(0,i.kt)(u,(0,r.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"7-\u8fdb\u9636\u6253\u5b57\u673a\u6a21\u5f0f"},"7. \u8fdb\u9636\uff1a\u6253\u5b57\u673a\u6a21\u5f0f"),(0,i.kt)("p",null,"\u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u5c06\u4f1a\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u53d1\u9001\u548c\u66f4\u65b0\u4e92\u52a8\u5361\u7247\uff08\u666e\u901a\u7248\uff09\u6765\u5b9e\u73b0\u6253\u5b57\u673a\u6a21\u5f0f\u3002"),(0,i.kt)("p",null,"\u672c\u6559\u7a0b\u7684\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u5728 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/open-dingtalk/dingtalk-tutorial-go"},"GitHub \u4ed3\u5e93"),"\u4e2d\u83b7\u53d6\uff0c\u672c\u7ae0\u8282\u6d89\u53ca\u7684\u4ee3\u7801\u91cf\u8f83\u5927\uff0c\u5efa\u8bae\u901a\u8fc7 GitHub \u67e5\u770b\u3002"),(0,i.kt)("h2",{id:"\u521b\u5efa-go-\u6a21\u5757"},"\u521b\u5efa Go \u6a21\u5757"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir bot_echo_streaming\ncd bot_echo_streaming\ngo mod init bot_echo_streaming\n")),(0,i.kt)("h2",{id:"\u5b89\u88c5\u4f9d\u8d56"},"\u5b89\u88c5\u4f9d\u8d56"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"go get github.com/open-dingtalk/dingtalk-stream-sdk-go\ngo get github.com/alibabacloud-go/dingtalk\ngo get github.com/alibabacloud-go/darabonba-openapi\n")),(0,i.kt)("h2",{id:"\u5f00\u53d1\u673a\u5668\u4eba\u670d\u52a1"},"\u5f00\u53d1\u673a\u5668\u4eba\u670d\u52a1"),(0,i.kt)("p",null,"\u5728 go.mod \u76f8\u540c\u7684\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa ",(0,i.kt)("inlineCode",{parentName:"p"},"echo_streaming.go")," \u6587\u4ef6\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="echo_streaming.go" showLineNumbers',title:'"echo_streaming.go"',showLineNumbers:!0},'package main\n\nimport (\n    "context"\n    "encoding/json"\n    "flag"\n    "fmt"\n    openapi "github.com/alibabacloud-go/darabonba-openapi/v2/client"\n    dingtalkim_1_0 "github.com/alibabacloud-go/dingtalk/im_1_0"\n    dingtalkoauth2_1_0 "github.com/alibabacloud-go/dingtalk/oauth2_1_0"\n    util "github.com/alibabacloud-go/tea-utils/v2/service"\n    "github.com/alibabacloud-go/tea/tea"\n    "github.com/google/uuid"\n    "github.com/open-dingtalk/dingtalk-stream-sdk-go/chatbot"\n    "github.com/open-dingtalk/dingtalk-stream-sdk-go/client"\n    "github.com/open-dingtalk/dingtalk-stream-sdk-go/logger"\n    "strings"\n    "time"\n)\n\n// doc: https://open-dingtalk.github.io/developerpedia/docs/learn/card/intro\nconst messageCardTemplate = `\n{\n  "config": {\n    "autoLayout": true,\n    "enableForward": true\n  },\n  "header": {\n    "title": {\n      "type": "text",\n      "text": "\u6253\u5b57\u673a\u6a21\u5f0f"\n    },\n    "logo": "@lALPDfJ6V_FPDmvNAfTNAfQ"\n  },\n  "contents": [\n    {\n      "type": "text",\n      "text": "%s",\n      "id": "text_1693929551595"\n    },\n    {\n      "type": "divider",\n      "id": "divider_1693929551595"\n    },\n    {\n      "type": "markdown",\n      "text": "%s",\n      "id": "markdown_1693929674245"\n    }\n  ]\n}\n`\n\ntype DingTalkClient struct {\n    ClientID     string\n    clientSecret string\n    accessToken  string\n    imClient     *dingtalkim_1_0.Client\n    oauthClient  *dingtalkoauth2_1_0.Client\n}\n\nvar (\n    dingtalkClient *DingTalkClient = nil\n)\n\nfunc NewDingTalkClient(clientId, clientSecret string) *DingTalkClient {\n    config := &openapi.Config{}\n    config.Protocol = tea.String("https")\n    config.RegionId = tea.String("central")\n    imClient, _ := dingtalkim_1_0.NewClient(config)\n    oauthClient, _ := dingtalkoauth2_1_0.NewClient(config)\n    return &DingTalkClient{\n        ClientID:     clientId,\n        clientSecret: clientSecret,\n        imClient:     imClient,\n        oauthClient:  oauthClient,\n    }\n}\n\nfunc (c *DingTalkClient) GetAccessToken() (string, error) {\n    request := &dingtalkoauth2_1_0.GetAccessTokenRequest{\n        AppKey:    tea.String(c.ClientID),\n        AppSecret: tea.String(c.clientSecret),\n    }\n    response, tryErr := func() (_resp *dingtalkoauth2_1_0.GetAccessTokenResponse, _e error) {\n        defer func() {\n            if r := tea.Recover(recover()); r != nil {\n                _e = r\n            }\n        }()\n        _resp, _err := c.oauthClient.GetAccessToken(request)\n        if _err != nil {\n            return nil, _err\n        }\n\n        return _resp, nil\n    }()\n    if tryErr != nil {\n        return "", tryErr\n    }\n    return *response.Body.AccessToken, nil\n}\n\nfunc (c *DingTalkClient) SendInteractiveCard(request *dingtalkim_1_0.SendRobotInteractiveCardRequest) (*dingtalkim_1_0.SendRobotInteractiveCardResponse, error) {\n    accessToken, err := c.GetAccessToken()\n    if err != nil {\n        return nil, err\n    }\n\n    headers := &dingtalkim_1_0.SendRobotInteractiveCardHeaders{\n        XAcsDingtalkAccessToken: tea.String(accessToken),\n    }\n    response, tryErr := func() (_resp *dingtalkim_1_0.SendRobotInteractiveCardResponse, _e error) {\n        defer func() {\n            if r := tea.Recover(recover()); r != nil {\n                _e = r\n            }\n        }()\n        _resp, _e = c.imClient.SendRobotInteractiveCardWithOptions(request, headers, &util.RuntimeOptions{})\n        if _e != nil {\n            return\n        }\n        return\n    }()\n    if tryErr != nil {\n        return nil, tryErr\n    }\n    return response, nil\n}\n\nfunc (c *DingTalkClient) UpdateInteractiveCard(request *dingtalkim_1_0.UpdateRobotInteractiveCardRequest) (*dingtalkim_1_0.UpdateRobotInteractiveCardResponse, error) {\n    accessToken, err := c.GetAccessToken()\n    if err != nil {\n        return nil, err\n    }\n\n    headers := &dingtalkim_1_0.UpdateRobotInteractiveCardHeaders{\n        XAcsDingtalkAccessToken: tea.String(accessToken),\n    }\n    response, tryErr := func() (_resp *dingtalkim_1_0.UpdateRobotInteractiveCardResponse, _e error) {\n        defer func() {\n            if r := tea.Recover(recover()); r != nil {\n                _e = r\n            }\n        }()\n        _resp, _e = c.imClient.UpdateRobotInteractiveCardWithOptions(request, headers, &util.RuntimeOptions{})\n        if _e != nil {\n            return\n        }\n        return\n    }()\n    if tryErr != nil {\n        return nil, tryErr\n    }\n    return response, nil\n}\n\nfunc OnChatBotMessageReceived(ctx context.Context, data *chatbot.BotCallbackDataModel) ([]byte, error) {\n    // create an uniq card id to identify a card instance while updating\n    // see: https://open.dingtalk.com/document/orgapp/robots-send-interactive-cards (cardBizId)\n    u, err := uuid.NewUUID()\n    if err != nil {\n        return nil, err\n    }\n    cardInstanceId := u.String()\n\n    // send interactive card; \u53d1\u9001\u4ea4\u4e92\u5f0f\u5361\u7247\n    cardData := fmt.Sprintf(messageCardTemplate, "", "")\n    sendOptions := &dingtalkim_1_0.SendRobotInteractiveCardRequestSendOptions{}\n    request := &dingtalkim_1_0.SendRobotInteractiveCardRequest{\n        CardTemplateId: tea.String("StandardCard"),\n        CardBizId:      tea.String(cardInstanceId),\n        CardData:       tea.String(cardData),\n        RobotCode:      tea.String(dingtalkClient.ClientID),\n        SendOptions:    sendOptions,\n        PullStrategy:   tea.Bool(false),\n    }\n    if data.ConversationType == "2" {\n        // group chat; \u7fa4\u804a\n        request.SetOpenConversationId(data.ConversationId)\n    } else {\n        // ConversationType == "1": private chat; \u5355\u804a\n        receiverBytes, err := json.Marshal(map[string]string{"userId": data.SenderStaffId})\n        if err != nil {\n            return nil, err\n        }\n        request.SetSingleChatReceiver(string(receiverBytes))\n    }\n    _, err = dingtalkClient.SendInteractiveCard(request)\n    if err != nil {\n        return nil, err\n    }\n\n    // \u6301\u7eed\u66f4\u65b0\u4ea4\u4e92\u5f0f\u5361\u7247\n    fullTitle := []string{"\u767b", "\u9e73", "\u96c0", "\u697c"}\n    fullContent := []string{"* \u767d", "\u65e5", "\u4f9d", "\u5c71", "\u5c3d\uff0c", "\\n* \u9ec4", "\u6cb3", "\u5165", "\u6d77", "\u6d41", "\u3002", "\\n* \u6b32", "\u7a77", "\u5343", "\u91cc", "\u76ee\uff0c", "\\n* \u66f4", "\u4e0a", "\u4e00", "\u5c42", "\u697c\u3002"}\n    fmt.Println(len(fullTitle))\n    for i := 1; i <= len(fullContent); i++ {\n        if i > 1 {\n            time.Sleep(time.Duration(100) * time.Millisecond)\n        }\n        title := strings.Join(fullTitle, "")\n        if i <= len(fullTitle) {\n            title = strings.Join(fullTitle[0:i], "")\n        }\n        content := strings.Join(fullContent[0:i], "")\n\n        updateRequest := &dingtalkim_1_0.UpdateRobotInteractiveCardRequest{\n            CardBizId: tea.String(cardInstanceId),\n            CardData:  tea.String(fmt.Sprintf(messageCardTemplate, title, content)),\n        }\n        _, err = dingtalkClient.UpdateInteractiveCard(updateRequest)\n        if err != nil {\n            return nil, err\n        }\n    }\n\n    return []byte(""), nil\n}\n\nfunc main() {\n    var clientId, clientSecret string\n    flag.StringVar(&clientId, "client_id", "", "your-client-id")\n    flag.StringVar(&clientSecret, "client_secret", "", "your-client-secret")\n    flag.Parse()\n    if len(clientId) == 0 || len(clientSecret) == 0 {\n        panic("command line options --client_id and --client_secret required")\n    }\n\n    logger.SetLogger(logger.NewStdTestLogger())\n\n    dingtalkClient = NewDingTalkClient(clientId, clientSecret)\n\n    cli := client.NewStreamClient(client.WithAppCredential(client.NewAppCredentialConfig(clientId, clientSecret)))\n    cli.RegisterChatBotCallbackRouter(OnChatBotMessageReceived)\n\n    err := cli.Start(context.Background())\n    if err != nil {\n        panic(err)\n    }\n\n    defer cli.Close()\n\n    select {}\n}\n')),(0,i.kt)("p",null,"\u4ee5\u4e0a\u4ee3\u7801\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u80fd\u529b\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u8bfb\u53d6 Client ID \u548c Client Secret \u9009\u9879"),(0,i.kt)("li",{parentName:"ol"},"\u901a\u8fc7 Client ID \u548c Client Secret \u521b\u5efa Stream Client"),(0,i.kt)("li",{parentName:"ol"},"\u5728 Stream Client \u4e2d\u6ce8\u518c\u673a\u5668\u4eba\u6d88\u606f\u56de\u8c03\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6d88\u606f\u63a5\u6536\u80fd\u529b"),(0,i.kt)("li",{parentName:"ol"},"\u5728\u6d88\u606f\u56de\u8c03\u65b9\u6cd5\u4e2d\uff0c\u521b\u5efa\u4ea4\u4e92\u5f0f\u5361\u7247\uff0c\u5e76\u6301\u7eed\u901a\u8fc7\u66f4\u65b0\u63a5\u53e3\u66f4\u65b0\u5361\u7247\u5185\u5bb9\uff0c\u5b9e\u73b0\u6253\u5b57\u673a\u6548\u679c")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"\u76ee\u524d\u4e0d\u652f\u6301\u6d41\u5f0f\u66f4\u65b0\u63a5\u53e3\uff0c\u6bcf\u6b21\u9700\u8981\u5168\u91cf\u66f4\u65b0\u5361\u7247\u5185\u5bb9\u3002")),(0,i.kt)("h2",{id:"\u8fd0\u884c\u673a\u5668\u4eba\u670d\u52a1"},"\u8fd0\u884c\u673a\u5668\u4eba\u670d\u52a1"),(0,i.kt)("p",null,"\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u8fd0\u884c\u4f60\u7684\u673a\u5668\u4eba\u670d\u52a1\uff0c\u5f53\u770b\u5230\u8fd9\u6837\u7684\u65e5\u5fd7\u8f93\u51fa\u65f6\u5019\u8868\u793a\u8fd0\u884c\u6210\u529f ",(0,i.kt)("inlineCode",{parentName:"p"},"[INFO] connect success, sessionId=[...]"),"\n\u201d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'go mod tidy\ngo run echo_streaming.go --client_id="your-client-id" --client_secret="your-client-secret"\n')),(0,i.kt)("admonition",{title:"\u6ce8\u610f\u4e8b\u9879",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},'\u52a1\u5fc5\u5c06\u4ee5\u4e0a\u547d\u4ee4\u4e2d"your-client-id"\u548c"your-client-secret"\u66ff\u6362\u6210\u5b9e\u9645\u7684\u503c\u540e\u518d\u8fd0\u884c\uff0c\u5426\u5219\u65e0\u6cd5\u6210\u529f\u5efa\u7acb\u8fde\u63a5\u3002Client ID \u548c Client Secret \u53ef\u4ee5\u901a\u8fc7',(0,i.kt)("a",{parentName:"p",href:"/docs/explore/tutorials/stream/bot/go/create-bot"},"\u6b65\u9aa4\u4e8c: \u521b\u5efa\u673a\u5668\u4eba\u5e94\u7528\u6587\u6863"),"\u83b7\u53d6\u3002")),(0,i.kt)("p",null,"\u81f3\u6b64\uff0c\u4f60\u5df2\u6210\u529f\u5b8c\u6210\u673a\u5668\u4eba\u670d\u52a1\u5f00\u53d1\u548c\u90e8\u7f72\u3002\u63a5\u4e0b\u6765\u53ef\u4ee5\u4f53\u9a8c\u81ea\u5df1\u5f00\u53d1\u7684\u673a\u5668\u4eba\u670d\u52a1\u4e86\u3002"),(0,i.kt)("h2",{id:"\u6548\u679c\u5982\u4e0b"},"\u6548\u679c\u5982\u4e0b"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u6253\u5b57\u673a\u6a21\u5f0f\u6548\u679c",src:t(26786).Z,width:"1266",height:"1036"})),(0,i.kt)("h2",{id:"\u6700\u4f73\u5b9e\u8df5"},"\u6700\u4f73\u5b9e\u8df5"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u672c\u6587\u4ee3\u7801\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u5bf9",(0,i.kt)("inlineCode",{parentName:"li"},"messageCardTemplate"),"\u5bf9\u5e94\u7684\u5361\u7247 JSON \u4f53\u5b58\u5728\u7591\u60d1\uff0c\u4e0d\u6e05\u695a\u5982\u4f55\u7f16\u5199\u8fd9\u6bb5 JSON \u4ee3\u7801\u3002\u8fd9\u662f\u5361\u7247\u6d88\u606f\u666e\u901a\u7248\u7684 JSON \u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7",(0,i.kt)("a",{parentName:"li",href:"https://card.dingtalk.com/card-builder"},"\u642d\u5efa\u5e73\u53f0"),"\u53ef\u89c6\u5316\u62d6\u62fd\u751f\u6210\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u66f4\u65b0\u5361\u7247\u63a5\u53e3\uff0c\u53ea\u7528\u53d1\u9001\u5361\u7247\u63a5\u53e3\u3002\u901a\u8fc7\u53d1\u9001\u4ea4\u4e92\u5f0f\u5361\u7247\uff0c\u5c55\u793a\u6bd4 Markdown \u6d88\u606f\u66f4\u4e30\u5bcc\u7684\u4e92\u52a8\u4f53\u9a8c\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u672c\u6587\u4ec5\u4ecb\u7ecd\u4e86",(0,i.kt)("strong",{parentName:"li"},"\u4e92\u52a8\u5361\u7247\u666e\u901a\u7248"),"\uff0c\u5982\u679c\u9700\u8981\u66f4\u7075\u6d3b\u7684\u4ea4\u4e92\u4f53\u9a8c\uff0c\u53ef\u4ee5\u901a\u8fc7",(0,i.kt)("a",{parentName:"li",href:"/docs/learn/card/intro"},"\u4e92\u52a8\u5361\u7247\u76f8\u5173\u6280\u672f\u6587\u6863\u6c47\u603b"),"\u4e86\u89e3\u5982\u4f55\u4f7f\u7528",(0,i.kt)("strong",{parentName:"li"},"\u4e92\u52a8\u5361\u7247\u9ad8\u7ea7\u7248"),"\u3002")),(0,i.kt)("h2",{id:"\u76f8\u5173\u94fe\u63a5"},"\u76f8\u5173\u94fe\u63a5"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/learn/card/intro"},"\u4e92\u52a8\u5361\u7247\u76f8\u5173\u6280\u672f\u6587\u6863\u6c47\u603b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://card.dingtalk.com/card-builder"},"\u4e92\u52a8\u5361\u7247\u666e\u901a\u7248-\u642d\u5efa\u5e73\u53f0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/chzealot/dingtalk-stable-diffusion"},"\u53e6\u5916\u4e00\u4e2a\u793a\u4f8b\uff1adingtalk-stable-diffusion"),"\uff0c\u4e5f\u901a\u8fc7\u76f8\u540c\u65b9\u5f0f\u5b9e\u73b0\u4e86\u6253\u5b57\u673a\u6a21\u5f0f\uff0c\u540c\u6837\u53ef\u4ee5\u53c2\u8003\u501f\u9274")))}p.isMDXComponent=!0},26786:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/bot-streaming-47495946979dea07da68a2eb2bb83d4a.gif"}}]);